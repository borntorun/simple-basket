/*!
 * storage.js
 * storage plugin wrapper to use with
 * simplebasket (https://github.com/borntorun/simple-basket)
 * Copyright 2015 Jo√£o Carvalho (https://github.com/borntorun); Licensed MIT
 */
!function(global,factory){"use strict";"function"==typeof define&&define.amd?define(["simplebasket"],function(simplebasket){return factory(simplebasket)}):"object"==typeof exports?module.exports=factory(require("simplebasket")):factory(global.simplebasket)}(this,function(simplebasket){"use strict";function callCallback(promise,callback){callback&&promise.then(function(data){callback(null,data)},function(err){callback(err)})}if(simplebasket&&simplebasket.plug){var iObj=simplebasket.getBasePluginWrapper("storage");return iObj.save=function(callback){return this[iObj.type].save(this.getClone(),callback)},iObj.load=function(callback){var self=this,thePromise=new Promise(function(resolve,reject){self[iObj.type].load().then(function(data){self.removeAll(),!!data&&self.add(data),resolve(self.getClone())})["catch"](function(error){reject(error)})});return callCallback(thePromise,callback),thePromise},iObj.clear=function(callback){return this[iObj.type].clear(callback)},simplebasket.plug(iObj),simplebasket}});
